@model IEnumerable<ManufacturingCompany.Models.Product>

@{
    ViewBag.Title = "SelectProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="card text-white bg-primary">Select a Product</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="col-md-2" style="margin-bottom:10px; display:inline-block;">
            @Html.Label("Search By : ", htmlAttributes: new { @class = "form-control", @style = "border:none;" })
        </div>

        <div class="col-md-3" style="margin-bottom:10px; display:inline-block;">
            @Html.DropDownList("SearchBy", (SelectList)ViewBag.SearchBy, htmlAttributes: new { @class = "form-control" })
        </div>

        <div class="col-md-3" style="margin-bottom:10px; display:inline-block;">
            @Html.TextBox("inputForUserSearch", "", new { @class = "form-control" })
        </div>

        <div class="col-md-3" style="margin-bottom:10px; display:inline-block;">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>
    </div>
}

<br />
@if (ViewBag.ErrorString != null || ViewBag.ErrorString != "")
{
    <div style="text-align:center;">
        @Html.Label((string)ViewBag.ErrorString, htmlAttributes: new { @class = "text-danger" })
    </div>
}
<br />

<table class="table">
    <tr>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.product_name)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.product_short_description)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.product_long_description)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.product_note)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.product_unit_cost)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.product_unit_price)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.Product_Category.category_name)
        </th>
        <th class="text-info"></th>
    </tr>

@if (Model != null)
{
    foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.product_name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.product_short_description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.product_long_description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.product_note)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.product_unit_cost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.product_unit_price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product_Category.category_name)
            </td>
            <td>
                @if (ViewBag.OptionalID != null)
                {
                    @Html.ActionLink("Select", (string)ViewBag.ActionName, (string)ViewBag.ControllerName, new { productID = item.Id, id = (int)ViewBag.OptionalID }, htmlAttributes: new { @class = "btn btn-outline-success" })
                }
                else
                {
                    @Html.ActionLink("Select", (string)ViewBag.ActionName, (string)ViewBag.ControllerName, new { productID = item.Id }, htmlAttributes: new { @class = "btn btn-outline-success" })
                }
            </td>
        </tr>
    }
}

</table>
