@model IEnumerable<ManufacturingCompany.Models.AspNetUser>

@{
    ViewBag.Title = "Select User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="card text-white bg-primary">Select a User</h2>

<hr />

@if ((string)ViewBag.ActionName == "ManageEmployee" && (string)ViewBag.ControllerName == "Manage")
{
    @Html.ActionLink("Register New Employee", "Register", "Account", routeValues: null, htmlAttributes: new { @class = "btn btn-default" })
    <hr />
}

<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="col-md-2" style="margin-bottom:10px; display:inline-block;">
            @Html.Label("Search By : ", htmlAttributes: new { @class = "form-control", @style = "border:none;" })
        </div>

        <div class="col-md-3" style="margin-bottom:10px; display:inline-block;">
            @Html.DropDownList("SearchBy", (SelectList)ViewBag.SearchBy, htmlAttributes: new { @class = "form-control" })
        </div>

        <div class="col-md-3" style="margin-bottom:10px; display:inline-block;">
            @Html.TextBox("inputForUserSearch", "", new { @class = "form-control" })
        </div>

        <div class="col-md-3" style="margin-bottom:10px; display:inline-block;">
            <input type="submit" value="Search" class="btn btn-success" style="display:inline-block;"/>
        </div>
    </div>
}

<br />
@if (ViewBag.ErrorString != null || ViewBag.ErrorString != "")
{
    <div class="text-center">
        @Html.Label((string)ViewBag.ErrorString, htmlAttributes: new { @class = "text-danger" })
    </div>
}
<br />

<table class="table">
    <tr>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th class="text-info">
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th class="text-info"></th>
    </tr>
    @if (Model != null)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ZipCode)
                </td>
                <td>
                    @if (ViewBag.OptionalID != null)
                    {
                        if (ViewBag.OptionalDirection != null)
                        {
                            @Html.ActionLink("Select", (string)ViewBag.ActionName, (string)ViewBag.ControllerName, new { userID = item.Id, id = (int)ViewBag.OptionalID, optionalDirection = (string)ViewBag.OptionalDirection }, htmlAttributes: new { @class = "btn btn-outline-success" })
                        }
                        else
                        {
                            @Html.ActionLink("Select", (string)ViewBag.ActionName, (string)ViewBag.ControllerName, new { userID = item.Id, id = (int)ViewBag.OptionalID }, htmlAttributes: new { @class = "btn btn-outline-success" })
                        }
                    }
                    else
                    {
                        if (ViewBag.OptionalDirection != null)
                        {
                            @Html.ActionLink("Select", (string)ViewBag.ActionName, (string)ViewBag.ControllerName, new { userID = item.Id, optionalDirection = (string)ViewBag.OptionalDirection }, htmlAttributes: new { @class = "btn btn-outline-success" })
                        }
                        else
                        {
                            @Html.ActionLink("Select", (string)ViewBag.ActionName, (string)ViewBag.ControllerName, new { userID = item.Id }, htmlAttributes: new { @class = "btn btn-outline-success" })
                        }
                    }                    
                </td>
            </tr>
        }
    }


</table>
